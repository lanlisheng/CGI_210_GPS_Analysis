/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/DataCollect_ElementBase.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

DataCollect_ElementBase::DataCollect_ElementBase()
{
    setWidth(924);
    setHeight(48);
    BG_Image.setXY(0, 0);
    BG_Image.setBitmap(touchgfx::Bitmap(BITMAP_LIST_ELEMENT_BACKGROUND_ID));

    DataRecord_Order.setXY(25, 10);
    DataRecord_Order.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    DataRecord_Order.setLinespacing(0);
    Unicode::snprintf(DataRecord_OrderBuffer, DATARECORD_ORDER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1JS7).getText());
    DataRecord_Order.setWildcard(DataRecord_OrderBuffer);
    DataRecord_Order.resizeToCurrentText();
    DataRecord_Order.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P7JZ));

    Longtitude_Seconds.setXY(855, 13);
    Longtitude_Seconds.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Longtitude_Seconds.setLinespacing(0);
    touchgfx::Unicode::snprintf(Longtitude_SecondsBuffer1, LONGTITUDE_SECONDSBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AYB3).getText());
    Longtitude_Seconds.setWildcard1(Longtitude_SecondsBuffer1);
    touchgfx::Unicode::snprintf(Longtitude_SecondsBuffer2, LONGTITUDE_SECONDSBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VSPJ).getText());
    Longtitude_Seconds.setWildcard2(Longtitude_SecondsBuffer2);
    Longtitude_Seconds.resizeToCurrentText();
    Longtitude_Seconds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_47P3));

    Longtitude_Minutes.setXY(818, 13);
    Longtitude_Minutes.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Longtitude_Minutes.setLinespacing(0);
    touchgfx::Unicode::snprintf(Longtitude_MinutesBuffer1, LONGTITUDE_MINUTESBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_DWQK).getText());
    Longtitude_Minutes.setWildcard1(Longtitude_MinutesBuffer1);
    touchgfx::Unicode::snprintf(Longtitude_MinutesBuffer2, LONGTITUDE_MINUTESBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_P6AR).getText());
    Longtitude_Minutes.setWildcard2(Longtitude_MinutesBuffer2);
    Longtitude_Minutes.resizeToCurrentText();
    Longtitude_Minutes.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AHJM));

    Lattitude_Seconds.setXY(725, 13);
    Lattitude_Seconds.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Lattitude_Seconds.setLinespacing(0);
    touchgfx::Unicode::snprintf(Lattitude_SecondsBuffer1, LATTITUDE_SECONDSBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BDMD).getText());
    Lattitude_Seconds.setWildcard1(Lattitude_SecondsBuffer1);
    touchgfx::Unicode::snprintf(Lattitude_SecondsBuffer2, LATTITUDE_SECONDSBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AA3L).getText());
    Lattitude_Seconds.setWildcard2(Lattitude_SecondsBuffer2);
    Lattitude_Seconds.resizeToCurrentText();
    Lattitude_Seconds.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OHHY));

    Lattitude_Minutes.setXY(690, 13);
    Lattitude_Minutes.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Lattitude_Minutes.setLinespacing(0);
    touchgfx::Unicode::snprintf(Lattitude_MinutesBuffer1, LATTITUDE_MINUTESBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_499X).getText());
    Lattitude_Minutes.setWildcard1(Lattitude_MinutesBuffer1);
    touchgfx::Unicode::snprintf(Lattitude_MinutesBuffer2, LATTITUDE_MINUTESBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4NQI).getText());
    Lattitude_Minutes.setWildcard2(Lattitude_MinutesBuffer2);
    Lattitude_Minutes.resizeToCurrentText();
    Lattitude_Minutes.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3XF0));

    Heading_Angle.setXY(642, 13);
    Heading_Angle.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Heading_Angle.setLinespacing(0);
    Unicode::snprintf(Heading_AngleBuffer, HEADING_ANGLE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2IS8).getText());
    Heading_Angle.setWildcard(Heading_AngleBuffer);
    Heading_Angle.resizeToCurrentText();
    Heading_Angle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X6VF));

    Pitch_Angle.setXY(588, 13);
    Pitch_Angle.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Pitch_Angle.setLinespacing(0);
    Unicode::snprintf(Pitch_AngleBuffer, PITCH_ANGLE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RN1R).getText());
    Pitch_Angle.setWildcard(Pitch_AngleBuffer);
    Pitch_Angle.resizeToCurrentText();
    Pitch_Angle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_67O2));

    Roll_Angle.setXY(538, 13);
    Roll_Angle.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Roll_Angle.setLinespacing(0);
    Unicode::snprintf(Roll_AngleBuffer, ROLL_ANGLE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_O8TQ).getText());
    Roll_Angle.setWildcard(Roll_AngleBuffer);
    Roll_Angle.resizeToCurrentText();
    Roll_Angle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FMJA));

    Magnetic_Z.setXY(490, 13);
    Magnetic_Z.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Magnetic_Z.setLinespacing(0);
    Unicode::snprintf(Magnetic_ZBuffer, MAGNETIC_Z_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_6MWB).getText());
    Magnetic_Z.setWildcard(Magnetic_ZBuffer);
    Magnetic_Z.resizeToCurrentText();
    Magnetic_Z.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RZQQ));

    Magnetic_Y.setXY(447, 13);
    Magnetic_Y.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Magnetic_Y.setLinespacing(0);
    Unicode::snprintf(Magnetic_YBuffer, MAGNETIC_Y_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RHK2).getText());
    Magnetic_Y.setWildcard(Magnetic_YBuffer);
    Magnetic_Y.resizeToCurrentText();
    Magnetic_Y.setTypedText(touchgfx::TypedText(T___SINGLEUSE_18AE));

    Magnetic_X.setXY(400, 13);
    Magnetic_X.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Magnetic_X.setLinespacing(0);
    Unicode::snprintf(Magnetic_XBuffer, MAGNETIC_X_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IMIR).getText());
    Magnetic_X.setWildcard(Magnetic_XBuffer);
    Magnetic_X.resizeToCurrentText();
    Magnetic_X.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R4O5));

    East_Speed.setXY(355, 13);
    East_Speed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    East_Speed.setLinespacing(0);
    Unicode::snprintf(East_SpeedBuffer, EAST_SPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_EQ4Z).getText());
    East_Speed.setWildcard(East_SpeedBuffer);
    East_Speed.resizeToCurrentText();
    East_Speed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HRSS));

    North_Speed.setXY(310, 13);
    North_Speed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    North_Speed.setLinespacing(0);
    Unicode::snprintf(North_SpeedBuffer, NORTH_SPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1CCU).getText());
    North_Speed.setWildcard(North_SpeedBuffer);
    North_Speed.resizeToCurrentText();
    North_Speed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NEXC));

    Celestial_Speed.setXY(265, 13);
    Celestial_Speed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Celestial_Speed.setLinespacing(0);
    Unicode::snprintf(Celestial_SpeedBuffer, CELESTIAL_SPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_MXA8).getText());
    Celestial_Speed.setWildcard(Celestial_SpeedBuffer);
    Celestial_Speed.resizeToCurrentText();
    Celestial_Speed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KNBT));

    Vehicle_Speed.setXY(220, 13);
    Vehicle_Speed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Vehicle_Speed.setLinespacing(0);
    Unicode::snprintf(Vehicle_SpeedBuffer, VEHICLE_SPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TXIF).getText());
    Vehicle_Speed.setWildcard(Vehicle_SpeedBuffer);
    Vehicle_Speed.resizeToCurrentText();
    Vehicle_Speed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BQST));

    Acceleration_Z.setXY(164, 13);
    Acceleration_Z.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Acceleration_Z.setLinespacing(0);
    Unicode::snprintf(Acceleration_ZBuffer, ACCELERATION_Z_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4E7K).getText());
    Acceleration_Z.setWildcard(Acceleration_ZBuffer);
    Acceleration_Z.resizeToCurrentText();
    Acceleration_Z.setTypedText(touchgfx::TypedText(T___SINGLEUSE_R8IP));

    Acceleration_Y.setXY(118, 13);
    Acceleration_Y.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Acceleration_Y.setLinespacing(0);
    Unicode::snprintf(Acceleration_YBuffer, ACCELERATION_Y_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_THAP).getText());
    Acceleration_Y.setWildcard(Acceleration_YBuffer);
    Acceleration_Y.resizeToCurrentText();
    Acceleration_Y.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DL1N));

    Acceleration_X.setXY(72, 13);
    Acceleration_X.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Acceleration_X.setLinespacing(0);
    Unicode::snprintf(Acceleration_XBuffer, ACCELERATION_X_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KZFU).getText());
    Acceleration_X.setWildcard(Acceleration_XBuffer);
    Acceleration_X.resizeToCurrentText();
    Acceleration_X.setTypedText(touchgfx::TypedText(T___SINGLEUSE_23V5));

    add(BG_Image);
    add(DataRecord_Order);
    add(Longtitude_Seconds);
    add(Longtitude_Minutes);
    add(Lattitude_Seconds);
    add(Lattitude_Minutes);
    add(Heading_Angle);
    add(Pitch_Angle);
    add(Roll_Angle);
    add(Magnetic_Z);
    add(Magnetic_Y);
    add(Magnetic_X);
    add(East_Speed);
    add(North_Speed);
    add(Celestial_Speed);
    add(Vehicle_Speed);
    add(Acceleration_Z);
    add(Acceleration_Y);
    add(Acceleration_X);
}

void DataCollect_ElementBase::initialize()
{

}

